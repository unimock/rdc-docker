#!/bin/bash

#PORT=24277
PORT=22
HNAME=`hostname`
SERVICE=$1 ; shift ; CMD=$1 ; shift

#echo "NODE=$NODE CMD=$CMD"

if [ "$CMD" != "sync" -a "$CMD" != "exec" -a "$CMD" != "snap" ] ; then                                                                                                                                     
    echo " usage: "
    echo "   `basename $0` <service.name>|. sync <source> <target> [real]"                                                                                                         
    echo "   `basename $0` <service.name>|. snap daily|weekly <rsnap-dir> <source-dir,targetdir> ..."
    echo "   `basename $0` <service.name>|. exec <command>"
    echo "   `basename $0` <service.name>|. exec <command>"
    echo " examples:"
    echo "   `basename $0` . exec cat /etc/passwd ... "
    echo "   `basename $0` rdc-pmgw1 exec  ......... login in rdc-pmgw1"
    echo "   `basename $0` rdc-pmgw1 sync /Docker/Services/mta rdc-pmgw2:/Docker/Mock real"
    echo "   `basename $0` rdc-pmgw1 snap daily /Docker/Backup rdc-pmgw2:/Docker/Services/mta,mh1-test"
    echo ""
    exit 0                                                                                                                                                                         
fi                                                                                                                                                                                 

if [ "$SERVICE" = "." ] ; then
  SERVICE=`hostname`
fi


if [ "$CMD" = "exec" ] ; then
  ssh -p ${PORT} root@${SERVICE} $*
  exit $?
fi
if [ "$CMD" = "snap" ] ; then
  B_CMD="$1" ; B_DIR="$2" ; shift ; shift
  list="$*"
  B_CFG="/tmp/rsnapshot.conf"
  #echo "dir=$B_DIR"
  #echo "$list"
  cp /etc/rsnapshot.conf-unimock       $B_CFG
  sed -i -e "s|/rsnapshot/|${B_DIR}/|" $B_CFG 
  for i in $list ; do
    S=${i%,*}"/"
    T=${i#*,}"/"
    echo -e "backup\t${S}\t${T}"    >> $B_CFG
  done
  #echo "rsnapshot -c $B_CFG $B_CMD" 
  ssh -p ${PORT} root@${SERVICE} "rsnapshot -c $B_CFG $B_CMD"    
  exit $?
fi

if [ "$CMD" = "sync" ] ; then 
  PAR="--dry-run "
  if [ "$3" = "real" ] ; then PAR="" ; fi
  if [ -f /root/.ssh/id_rsa ] ; then PAR="$PAR -i /root/.ssh/id_rsa " ; fi
  X=${1%:*}
  if [ "$X" != "$1" ] ; then
    SOURCE="root@$1/"
  else
    SOURCE="$1/"
  fi

  X=${2%:*}
  if [ "$X" != "$2" ] ; then
    TARGET="root@$2"
  else
    TARGET="$2"
  fi
   #ssh -p ${PORT} root@${SERVICE} "rsync -avzS ${PAR} --numeric-ids --delete -e \"ssh -p ${PORT}  -o StrictHostKeyChecking=no\" ${SOURCE} ${TARGET}"
   ssh -p ${PORT} root@${SERVICE} "rsync -avzS ${PAR} --numeric-ids --delete -e \"ssh -p ${PORT} \" ${SOURCE} ${TARGET}"
  exit $?
fi


